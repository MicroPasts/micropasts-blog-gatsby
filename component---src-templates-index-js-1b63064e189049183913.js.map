{"version":3,"file":"component---src-templates-index-js-1b63064e189049183913.js","mappings":"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","sources":["webpack://micropasts-blog-gatsby/./src/components/structure/SEO.js","webpack://micropasts-blog-gatsby/./src/hooks/use-site-metadata.js","webpack://micropasts-blog-gatsby/./node_modules/dom-helpers/esm/camelize.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardImg.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/Card.js","webpack://micropasts-blog-gatsby/./src/components/structure/post-card.js","webpack://micropasts-blog-gatsby/./src/components/structure/pagination.js","webpack://micropasts-blog-gatsby/./src/templates/index.js"],"sourcesContent":["import React from \"react\";\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata\";\n\nfunction createSeoImage(featured, image) {\n  if (featured) {\n    return featured?.childImageSharp.gatsbyImageData.images.fallback.src;\n  }\n  return image;\n}\n\nconst Seo = ({ title, description, pathname, children, featured }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterHandle } = useSiteMetadata();\n  console.log(featured);\n  const featuredImage = createSeoImage(featured, image);\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${featuredImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterHandle\n  };\n\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterHandle} />\n      <meta property=\"og:url\" content={seo.url.toString()} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content=\"Museologi.st\" />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:locale\" content=\"en-gb\" />\n      <meta property=\"og:image\" content={seo.image.toString()} />\n      <meta property=\"og:image:alt\" content=\"An image representing this post\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:type\" content=\"image/jpeg\" />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterHandle\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => (\n\n  <Card className=\"border-0 my-3\">\n    <Row className=\"row g-0\">\n      <Col md={4}>\n          {post.frontmatter.featuredImage !== null ?\n            <GatsbyImage image={getImage(post.frontmatter.featuredImage)} alt={post.frontmatter.title}\n                         className={\"img-fluid rounded-start\"} />\n            :\n            <StaticImage src={\"../../images/img.png\"} alt=\"A stand in image\" width={400} height={250}\n                         placeholder={\"BLURRED\"} className={\"img-fluid rounded-start\"} />\n          }\n      </Col>\n      <Col md={8}>\n        <Card.Body className=\"bg-white\">\n          <Link to={post.frontmatter.permalink} className=\"stretched-link stretched-link__blog_post\">\n            <h1 className=\"lead text-black fw-bold mb-3 mt-0\">{post.frontmatter.title}</h1>\n            <h2\n              className=\"text-primary small\">{post.frontmatter.date} Authors: {post.frontmatter.author && post.frontmatter.author.map(writer => (\n              `${writer} `\n            ))}</h2>\n            <p className={\"text-dark\"} >{post.excerpt}</p>\n          </Link>\n        </Card.Body>\n      </Col>\n    </Row>\n\n\n  </Card>\n);\n\nexport default PostCard;","import React from 'react'\nimport PropType from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport {Container} from \"react-bootstrap\";\n\nexport default function Pagination(props) {\n\n    const {pageContext} = props;\n    const {pageNumber, numberOfPages, humanPageNumber, previousPagePath, nextPagePath} = pageContext;\n    return (\n            <Container>\n                <nav className=\"pagination py-2\">\n                    {humanPageNumber > 1 ? (\n                            <Link\n                                title=\"Go to previous page\"\n                                to={previousPagePath}>\n                                ← Previous\n                            </Link>) :\n                        <span/>}\n                    <strong>Page {pageNumber + 1} of {numberOfPages}</strong>\n                    {humanPageNumber < numberOfPages ? (\n                            <Link\n                                title=\"Go to next page\"\n                                to={nextPagePath}>\n                                Next →\n                            </Link>) :\n                        <span/>}\n                </nav>\n            </Container>\n    )\n\n}\n\n\nPagination.propType = {\n    pageContext: PropType.object.isRequired,\n}","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/structure/post-card\";\nimport {graphql} from \"gatsby\"\nimport {Container, Row} from 'react-bootstrap';\nimport Pagination from '../components/structure/pagination';\nimport Seo from \"../components/structure/SEO\";\n\nconst BlogPage = (props) => {\n    const Posts = props.data.allMarkdownRemark.edges\n        .filter(edge => !!edge.node.frontmatter.date)\n        .map(edge => <PostCard key={edge.node.id} post={edge.node}/>)\n    return (\n        <Layout>\n            <Container>\n                <Row>\n                    <h1 className=\"ml-4 mt-4\">Posts, stories and more</h1>\n                    <Row>\n                        {Posts}\n                    </Row>\n                </Row>\n            </Container>\n            <Container fluid className={\"mx-auto text-center bg-white\"}>\n                <Pagination pageContext={props.pageContext} />\n            </Container>\n        </Layout>\n    );\n}\nexport default BlogPage\n\nexport const pageQuery = graphql`\n    query($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: {frontmatter: {type: {eq: \"post\"}}}\n            sort: {frontmatter: {date: DESC}}\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(format: PLAIN, pruneLength: 400)\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        permalink\n                        title\n                        author\n                        featuredImage {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 250\n                                    formats: [AUTO, WEBP]\n                                    width: 400\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const Head = () => (\n    <Seo title={\"Blog and news\"}\n         description={\"A sporadically populated blog; news, stories, tips\"}\n    />\n)"],"names":["title","description","pathname","children","featured","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","useStaticQuery","site","siteMetadata","console","log","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","createSeoImage","seo","url","name","content","property","toString","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","className","bsPrefix","as","Tag","props","ref","resolvedPrefix","p","CardImg","variant","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","post","Row","Col","md","frontmatter","G","getImage","alt","S","width","height","placeholder","to","permalink","date","author","map","writer","excerpt","Pagination","pageContext","pageNumber","numberOfPages","humanPageNumber","previousPagePath","nextPagePath","Container","propType","PropType","Posts","data","allMarkdownRemark","edges","filter","edge","node","key","id","fluid","Head"],"sourceRoot":""}