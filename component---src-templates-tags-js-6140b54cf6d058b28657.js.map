{"version":3,"file":"component---src-templates-tags-js-6140b54cf6d058b28657.js","mappings":"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","sources":["webpack://micropasts-blog-gatsby/./node_modules/dom-helpers/esm/camelize.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/createWithBsPrefix.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardImg.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/Card.js","webpack://micropasts-blog-gatsby/./src/components/structure/post-card.js","webpack://micropasts-blog-gatsby/./src/templates/tags.js"],"sourcesContent":["var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => (\n\n  <Card className=\"border-0 my-3\">\n    <Row className=\"row g-0\">\n      <Col md={4}>\n          {post.frontmatter.featuredImage !== null ?\n            <GatsbyImage image={getImage(post.frontmatter.featuredImage)} alt={post.frontmatter.title}\n                         className={\"img-fluid rounded-start\"} />\n            :\n            <StaticImage src={\"../../images/img.png\"} alt=\"A stand in image\" width={400} height={250}\n                         placeholder={\"BLURRED\"} className={\"img-fluid rounded-start\"} />\n          }\n      </Col>\n      <Col md={8}>\n        <Card.Body className=\"bg-white\">\n          <Link to={post.frontmatter.permalink} className=\"stretched-link stretched-link__blog_post\">\n            <h1 className=\"lead text-black fw-bold mb-3 mt-0\">{post.frontmatter.title}</h1>\n            <h2\n              className=\"text-primary small\">{post.frontmatter.date} Authors: {post.frontmatter.author && post.frontmatter.author.map(writer => (\n              `${writer} `\n            ))}</h2>\n            <p className={\"text-dark\"} >{post.excerpt}</p>\n          </Link>\n        </Card.Body>\n      </Col>\n    </Row>\n\n\n  </Card>\n);\n\nexport default PostCard;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\";\n// Components\nimport {Link, graphql} from \"gatsby\"\nimport PostCard from \"../components/structure/post-card\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n// Utilities\nimport {startCase} from \"lodash\"\nimport Seo from \"../components/structure/SEO\";\n\nconst Tags = ({pageContext, data}) => {\n  const {tag} = pageContext\n  const {edges, totalCount} = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${startCase(tag)}\"`\n\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <h1 className=\"ml-4 mt-4\">{tagHeader}</h1>\n          <Row>\n            {edges.map(({node}) => {\n              return (\n                <PostCard key={node.id} post={node}/>\n              )\n            })}\n          </Row>\n          <Col md={4}>\n            <Link className=\"my-3 btn-dark btn\" to=\"/tags\">All tags</Link>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        allMarkdownRemark(\n            limit: 2000\n            filter: { frontmatter: { tag: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    excerpt(format: PLAIN, pruneLength: 400)\n                    frontmatter {\n                        title\n                        permalink\n                        author\n                        featuredImage {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 250\n                                    formats: [AUTO, WEBP]\n                                    width: 400\n                                )\n                            }\n                        }   \n                    }\n                }\n            }\n        }\n    }\n`\nexport function Head({pageContext}) {\n  return (\n    <Seo title={\"Pages tagged with \" + pageContext.tag} />\n  )\n}"],"names":["rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","className","bsPrefix","as","Tag","props","ref","resolvedPrefix","p","CardImg","variant","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","post","Row","Col","md","frontmatter","featuredImage","G","image","getImage","alt","title","S","src","width","height","placeholder","to","permalink","date","author","map","writer","excerpt","pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","node","key","id","Head"],"sourceRoot":""}