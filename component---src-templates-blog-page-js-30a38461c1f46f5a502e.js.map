{"version":3,"file":"component---src-templates-blog-page-js-30a38461c1f46f5a502e.js","mappings":"6TAMA,MAAMA,EAAUC,IAAA,IAAC,OAACC,GAAOD,EAAA,OACvBE,EAAAA,cAACC,EAAAA,EAAG,KACGF,GAAUC,EAAAA,cAACE,EAAAA,EAAG,CAACC,GAAI,GAAIC,UAAU,QAAO,iBACxBL,EAAOM,KAAI,CAACC,EAAMC,IAC/BP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAI,YAAYC,IAAUJ,MAAUF,UAAU,OAC9CO,IAAKJ,GAAIK,IAAUN,OAG7B,EAORT,EAAQgB,aAAe,CACrBd,OAAQ,IAGV,QCnBA,MAAMe,EAAOhB,IAAA,IAAC,KAACiB,GAAKjB,EAAA,OAClBE,EAAAA,cAACgB,EAAAA,EAAS,CAACC,OAAK,GACdjB,EAAAA,cAACgB,EAAAA,EAAS,KACRhB,EAAAA,cAACC,EAAAA,EAAG,KACDc,GAAQf,EAAAA,cAACE,EAAAA,EAAG,CAACC,GAAI,GAAIC,UAAU,aAC7BW,EAAKV,KAAI,CAACC,EAAMC,IACfP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAI,SAASC,IAAUJ,MAAUF,UAAU,wCAC3CO,IAAKJ,GAAIK,IAAUN,SAKvB,EAOdQ,EAAKD,aAAe,CAClBE,KAAM,IAGR,QCpBe,SAASG,EAAgBpB,GAA4B,IAA1BqB,MAAM,eAACC,IAAgBtB,EAC7D,MAAM,YAACuB,EAAW,WAAEC,EAAU,KAAEC,GAAQH,EACxC,OACIpB,EAAAA,cAACwB,EAAAA,EAAM,KACHxB,EAAAA,cAACgB,EAAAA,EAAS,KACNhB,EAAAA,cAACC,EAAAA,EAAG,CAACG,UAAW,aACZJ,EAAAA,cAAA,OAAKI,UAAU,QACXJ,EAAAA,cAAA,MAAII,UAAU,gCAAgCiB,EAAYI,OAC1DzB,EAAAA,cAACH,EAAO,CAACE,OAAQsB,EAAYtB,SAC7BC,EAAAA,cAAA,MAAII,UAAU,2BAA2B,GClB1D,SAA2BsB,GAC9B,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,GAChC,OAAIC,EAAO,EACA,GAAG,IAAIG,MAAMF,KAAKC,MAAMF,EAAOC,KAAKG,IACtCC,KAAK,MACLC,KAAK,OAAOP,cAEV,GAAG,IAAII,MAAMH,GAAQ,GAAGK,KAAK,MAAMC,KAAK,OAC/B,IAAZP,EAAgBA,EAAU,OAASA,EAAU,6BAGzD,CDOoEQ,CAAkBZ,OAElEtB,EAAAA,cAAA,OAAKI,UAAU,oCACV+B,wBAAyB,CAACC,OAAQb,OAG9CF,EAAYgB,KAAOrC,EAAAA,cAACc,EAAI,CAACC,KAAMM,EAAYgB,MAIxD,CAoCO,SAASC,EAAIC,GAA4B,IAA1BpB,MAAM,eAACC,IAAgBmB,EACzC,MAAM,YAAClB,EAAW,QAACmB,GAAWpB,EAC9B,OACIpB,EAAAA,cAACyC,EAAAA,EAAG,CAAChB,MAAOJ,EAAYI,MAAOiB,YAAaF,EAASG,SAAUtB,EAAYuB,eAEnF,C,sBErEA,IAuBIC,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,aAC5C,IAEAC,EAAOC,QAAUP,C","sources":["webpack://micropasts-blog-gatsby/./src/components/structure/authors.js","webpack://micropasts-blog-gatsby/./src/components/structure/tag.js","webpack://micropasts-blog-gatsby/./src/templates/blog-page.js","webpack://micropasts-blog-gatsby/./src/utils/helpers.js","webpack://micropasts-blog-gatsby/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\"\nimport {kebabCase, startCase} from \"lodash\";\nimport PropTypes from \"prop-types\"\nimport {Col, Row} from \"react-bootstrap\";\nimport {Link} from \"gatsby\";\n\nconst Authors = ({author}) => (\n  <Row>\n        {author && <Col md={12} className=\"mb-2\">\n          Authored by:  {author.map((item, i) => (\n            <Link to={`/authors/${kebabCase(item)}/`} className=\"mx-1\"\n                  key={i}>{startCase(item)}</Link>\n          ))}\n        </Col>}\n  </Row>\n)\n\nAuthors.propTypes = {\n  author: PropTypes.array\n}\n\nAuthors.defaultProps = {\n  author: ``,\n}\n\nexport default Authors;","import React from \"react\"\nimport {kebabCase, startCase} from \"lodash\";\nimport PropTypes from \"prop-types\"\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {Link} from \"gatsby\";\n\nconst Tags = ({tags}) => (\n  <Container fluid>\n    <Container>\n      <Row>\n        {tags && <Col md={12} className=\"px-4 mb-2\">\n          {tags.map((item, i) => (\n            <Link to={`/tags/${kebabCase(item)}/`} className=\"btn btn-dark mx-1 my-1 p-2 text-white\"\n                  key={i}>{startCase(item)}</Link>\n          ))}\n        </Col>}\n      </Row>\n    </Container>\n  </Container>\n)\n\nTags.propTypes = {\n  tags: PropTypes.array\n}\n\nTags.defaultProps = {\n  tags: ``,\n}\n\nexport default Tags;","import {graphql} from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Container, Row} from \"react-bootstrap\";\nimport Seo from \"../components/structure/SEO\";\nimport {formatReadingTime} from \"../utils/helpers\";\nimport Authors from \"../components/structure/authors\";\nimport Tags from \"../components/structure/tag\";\n\nexport default function BlogPageTemplate({data: {markdownRemark}}) {\n    const {frontmatter, timeToRead, html} = markdownRemark;\n    return (\n        <Layout>\n            <Container>\n                <Row className={\"post-body\"}>\n                    <div className=\"px-4\">\n                        <h1 className=\"text-black fw-bold mt-4 mb-2\">{frontmatter.title}</h1>\n                        <Authors author={frontmatter.author}/>\n                        <h3 className=\"text-primary lead small\">{`${formatReadingTime(timeToRead)}`}</h3>\n                    </div>\n                    <div className=\"post-body bg-white text-black p-4\"\n                         dangerouslySetInnerHTML={{__html: html}}/>\n                </Row>\n            </Container>\n            {frontmatter.tag && <Tags tags={frontmatter.tag}/>}\n\n        </Layout>\n    );\n}\n\n\nexport const pageQuery = graphql`\n    query ($id: String!) {\n        markdownRemark(id: { eq: $id }) {\n            html\n            id\n            timeToRead\n            wordCount {\n              words\n             }\n            excerpt(format: PLAIN, pruneLength: 30)\n            frontmatter {\n                permalink\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                author\n                tag\n                featuredImage {\n                    childImageSharp {\n                        gatsbyImageData(\n                            placeholder: BLURRED\n                            height: 600\n                            formats: [AUTO, WEBP]\n                            width: 600\n                            quality: 80\n                            transformOptions: { grayscale: false, fit: COVER, cropFocus: CENTER }\n                        )\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport function Head({data: {markdownRemark}}) {\n    const {frontmatter,excerpt} = markdownRemark;\n    return (\n        <Seo title={frontmatter.title} description={excerpt} featured={frontmatter.featuredImage} />\n    )\n}\n","export function formatReadingTime(minutes) {\n    let cups = Math.round(minutes / 5);\n    if (cups > 5) {\n        return `${new Array(Math.round(cups / Math.E))\n            .fill('🥪')\n            .join('')} ${minutes} mins read`;\n    } else {\n        return `${new Array(cups || 1).fill('🍵').join('')} ${\n            minutes === 1 ? minutes + \" min\" : minutes + \" mins\"\n        } to read (suggested)`;\n    }\n}","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["Authors","_ref","author","React","Row","Col","md","className","map","item","i","Link","to","_kebabCase","key","_startCase","defaultProps","Tags","tags","Container","fluid","BlogPageTemplate","data","markdownRemark","frontmatter","timeToRead","html","Layout","title","minutes","cups","Math","round","Array","E","fill","join","formatReadingTime","dangerouslySetInnerHTML","__html","tag","Head","_ref2","excerpt","Seo","description","featured","featuredImage","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}