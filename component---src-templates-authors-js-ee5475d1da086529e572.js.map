{"version":3,"file":"component---src-templates-authors-js-ee5475d1da086529e572.js","mappings":"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","sources":["webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardBody.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardImg.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardLink.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardText.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://micropasts-blog-gatsby/./node_modules/react-bootstrap/esm/Card.js","webpack://micropasts-blog-gatsby/./src/components/structure/post-card.js","webpack://micropasts-blog-gatsby/./src/templates/authors.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\n\nconst PostCard = ({ post }) => (\n\n  <Card className=\"border-0 my-3\">\n    <Row className=\"row g-0\">\n      <Col md={4}>\n          {post.frontmatter.featuredImage !== null ?\n            <GatsbyImage image={getImage(post.frontmatter.featuredImage)} alt={post.frontmatter.title}\n                         className={\"img-fluid rounded-start\"} />\n            :\n            <StaticImage src={\"../../images/img.png\"} alt=\"A stand in image\" width={400} height={250}\n                         placeholder={\"BLURRED\"} className={\"img-fluid rounded-start\"} />\n          }\n      </Col>\n      <Col md={8}>\n        <Card.Body className=\"bg-white\">\n          <Link to={post.frontmatter.permalink} className=\"stretched-link stretched-link__blog_post\">\n            <h1 className=\"lead text-black fw-bold mb-3 mt-0\">{post.frontmatter.title}</h1>\n            <h2\n              className=\"text-primary small\">{post.frontmatter.date} Authors: {post.frontmatter.author && post.frontmatter.author.map(writer => (\n              `${writer} `\n            ))}</h2>\n            <p className={\"text-dark\"} >{post.excerpt}</p>\n          </Link>\n        </Card.Body>\n      </Col>\n    </Row>\n\n\n  </Card>\n);\n\nexport default PostCard;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\";\n// Components\nimport {Link, graphql} from \"gatsby\"\nimport PostCard from \"../components/structure/post-card\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n// Utilities\nimport {startCase} from \"lodash\"\nimport Seo from \"../components/structure/SEO\";\n\nconst Authors = ({pageContext, data}) => {\n  const {author} = pageContext\n  const {edges, totalCount} = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } authored by ${startCase(author)}`\n\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <h1 className=\"ml-4 mt-4\">{tagHeader}</h1>\n          <Row>\n            {edges.map(({node}) => {\n              return (\n                <PostCard key={node.id} post={node}/>\n              )\n            })}\n          </Row>\n          <Col md={4}>\n            <Link className=\"my-3 btn-dark btn\" to=\"/authors\">All authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n\n}\n\nAuthors.propTypes = {\n  pageContext: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Authors\n\nexport const pageQuery = graphql`\n    query($author: String) {\n        allMarkdownRemark(\n            limit: 2000\n            filter: { frontmatter: { author: { in: [$author] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    excerpt(format: PLAIN, pruneLength: 400)\n                    frontmatter {\n                        title\n                        permalink\n                        author\n                        tag\n                        featuredImage {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    placeholder: BLURRED\n                                    height: 250\n                                    formats: [AUTO, WEBP]\n                                    width: 400\n                                )\n                            }\n                        }   \n                    }\n                }\n            }\n        }\n    }\n`\nexport function Head({pageContext}) {\n  return (\n    <Seo title={\"Pages authored by \" + pageContext.author} />\n  )\n}"],"names":["CardBody","className","bsPrefix","as","Component","props","ref","displayName","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","p","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_ref","post","React","Row","Col","md","frontmatter","featuredImage","GatsbyImage","image","getImage","alt","title","StaticImage","src","width","height","placeholder","__imageData","require","to","permalink","date","author","map","writer","excerpt","pageContext","data","edges","totalCount","allMarkdownRemark","tagHeader","_startCase","Layout","Container","_ref2","node","PostCard","key","id","Head","_ref3","Seo"],"sourceRoot":""}