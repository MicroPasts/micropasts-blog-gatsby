{"version":3,"file":"component---src-templates-page-js-50b65402656f456d68be.js","mappings":"6LAkDA,MAxCY,IAA2D,IAA1D,MAAEA,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,GAAU,EAC/D,MAAQJ,MAAOK,EAAcJ,YAAaK,EAAkB,MAAEC,EAAK,QAAEC,EAAO,cAAEC,ICR/DC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDLnBC,QAAQC,IAAIV,GACZ,MAAMW,EAVR,SAAwBX,EAAUG,GAChC,OAAIH,EACKA,aAAQ,EAARA,EAAUY,gBAAgBC,gBAAgBC,OAAOC,SAASC,IAE5Db,CACT,CAKwBc,CAAejB,EAAUG,GACzCe,EAAM,CACVtB,MAAOA,GAASK,EAChBJ,YAAaA,GAAeK,EAC5BC,MAAM,GAAIC,EAAUO,EACpBQ,IAAI,GAAIf,GAAUN,GAAQ,IAC1BO,iBAIF,OACE,gCACE,6BAAQa,EAAItB,OACZ,wBAAMwB,KAAK,cAAcC,QAASH,EAAIrB,cACtC,wBAAMuB,KAAK,QAAQC,QAASH,EAAIf,QAChC,wBAAMiB,KAAK,eAAeC,QAAQ,wBAClC,wBAAMD,KAAK,gBAAgBC,QAASH,EAAItB,QACxC,wBAAMwB,KAAK,cAAcC,QAASH,EAAIC,MACtC,wBAAMC,KAAK,sBAAsBC,QAASH,EAAIrB,cAC9C,wBAAMuB,KAAK,gBAAgBC,QAASH,EAAIf,QACxC,wBAAMiB,KAAK,kBAAkBC,QAASH,EAAIb,gBAC1C,wBAAMiB,SAAS,SAASD,QAASH,EAAIC,IAAII,aACzC,wBAAMD,SAAS,WAAWD,QAASH,EAAItB,QACvC,wBAAM0B,SAAS,UAAUD,QAAQ,YACjC,wBAAMC,SAAS,eAAeD,QAAQ,iBACtC,wBAAMC,SAAS,iBAAiBD,QAASH,EAAIrB,cAC7C,wBAAMyB,SAAS,YAAYD,QAAQ,UACnC,wBAAMC,SAAS,WAAWD,QAASH,EAAIf,MAAMoB,aAC7C,wBAAMD,SAAS,eAAeD,QAAQ,oCACtC,wBAAMC,SAAS,iBAAiBD,QAAQ,QACxC,wBAAMC,SAAS,iBAAiBD,QAAQ,QACxC,wBAAMC,SAAS,gBAAgBD,QAAQ,eACtCtB,EACA,C,mJExCQ,SAASyB,EAAa,GAA2B,IAA1BC,MAAM,eAACC,IAAgB,EACzD,MAAM,YAACC,EAAW,KAAEC,GAAQF,EAC5B,OACI,gBAAC,IAAM,KACH,gBAAC,IAAS,KACN,gBAAC,IAAG,CAACG,UAAW,aACZ,uBAAKA,UAAU,QACX,sBAAIA,UAAU,gCAAgCF,EAAY/B,QAG9D,uBAAKiC,UAAU,oCACVC,wBAAyB,CAACC,OAAQH,OAM3D,CAsBO,SAASI,EAAK,GAA2B,IAA1BP,MAAM,eAACC,IAAgB,EACzC,MAAM,YAACC,GAAeD,EACtB,OACI,gBAAC,IAAG,CAAC9B,MAAO+B,EAAY/B,OAEhC,C","sources":["webpack://micropasts-blog-gatsby/./src/components/structure/SEO.js","webpack://micropasts-blog-gatsby/./src/hooks/use-site-metadata.js","webpack://micropasts-blog-gatsby/./src/templates/page.js"],"sourcesContent":["import React from \"react\";\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata\";\n\nfunction createSeoImage(featured, image) {\n  if (featured) {\n    return featured?.childImageSharp.gatsbyImageData.images.fallback.src;\n  }\n  return image;\n}\n\nconst Seo = ({ title, description, pathname, children, featured }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterHandle } = useSiteMetadata();\n  console.log(featured);\n  const featuredImage = createSeoImage(featured, image);\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${featuredImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterHandle\n  };\n\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterHandle} />\n      <meta property=\"og:url\" content={seo.url.toString()} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content=\"Museologi.st\" />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:locale\" content=\"en-gb\" />\n      <meta property=\"og:image\" content={seo.image.toString()} />\n      <meta property=\"og:image:alt\" content=\"An image representing this post\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:type\" content=\"image/jpeg\" />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterHandle\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}","import {graphql} from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Container, Row} from \"react-bootstrap\";\nimport Seo from \"../components/structure/SEO\";\n\nexport default function PageTemplate({data: {markdownRemark}}) {\n    const {frontmatter, html} = markdownRemark;\n    return (\n        <Layout>\n            <Container>\n                <Row className={\"post-body\"}>\n                    <div className=\"px-4\">\n                        <h1 className=\"text-black fw-bold mt-4 mb-2\">{frontmatter.title}</h1>\n\n                    </div>\n                    <div className=\"post-body bg-white text-black p-4\"\n                         dangerouslySetInnerHTML={{__html: html}}/>\n                </Row>\n            </Container>\n\n        </Layout>\n    );\n}\n\n\nexport const pageQuery = graphql`\n    query ($id: String!) {\n        markdownRemark(id: { eq: $id }) {\n            html\n            id\n            timeToRead\n            wordCount {\n              words\n             }\n            frontmatter {\n                permalink\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                author\n            }\n        }\n    }\n`;\n\nexport function Head({data: {markdownRemark}}) {\n    const {frontmatter} = markdownRemark;\n    return (\n        <Seo title={frontmatter.title}  />\n    )\n}\n"],"names":["title","description","pathname","children","featured","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","useStaticQuery","site","siteMetadata","console","log","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","createSeoImage","seo","url","name","content","property","toString","PageTemplate","data","markdownRemark","frontmatter","html","className","dangerouslySetInnerHTML","__html","Head"],"sourceRoot":""}