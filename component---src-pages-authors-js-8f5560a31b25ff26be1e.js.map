{"version":3,"file":"component---src-pages-authors-js-8f5560a31b25ff26be1e.js","mappings":"oRAyDA,UA7CoB,QACAA,MACEC,mBAAmB,MAAEC,GACrBC,MACEC,cAAc,MAAEC,MAGrB,SACjB,gBAAC,IAAM,KACL,gBAAC,IAAS,KACR,gBAAC,IAAG,CAACC,UAAW,aACd,sBAAIA,UAAU,aAAY,QAC1B,sBAAIA,UAAU,wBACXJ,EAAMK,KAAIC,GACT,sBAAIC,IAAKD,EAAOE,WAAYJ,UAAU,uFACpC,gBAAC,EAAAK,KAAI,CAACC,GAAE,YAAc,IAAUJ,EAAOE,YAAW,KAC/C,IAAUF,EAAOE,aAEpB,wBAAMJ,UAAU,iBAAiBE,EAAOK,kBAM3C,EAuBJ,MAgBMC,EAAO,IAClB,gBAAC,IAAG,CAACT,MAAO,mCAAoCU,YAAa,yE,uBC5E/D,IAuBIC,EAvBmB,EAAQ,KAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,aAC5C,IAEAC,EAAOC,QAAUP,C","sources":["webpack://micropasts-blog-gatsby/./src/pages/authors.js","webpack://micropasts-blog-gatsby/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Seo from \"../components/structure/SEO\";\n\n// Utilities\nimport {kebabCase, startCase} from \"lodash\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout  from \"../components/layout\"\nimport {Container,Row} from \"react-bootstrap\"\n\nconst AuthorsPage = ({\n                    data: {\n                      allMarkdownRemark: { group },\n                      site: {\n                        siteMetadata: { title },\n                      },\n                    },\n                  }) => (\n  <Layout>\n    <Container>\n      <Row className={\"post-body\"}>\n        <h1 className=\"ml-4 mt-4\">Tags</h1>\n        <ul className=\"list-group-flush row\">\n          {group.map(author => (\n            <li key={author.fieldValue} className=\"list-item col-md-4 border-top py-2 d-flex justify-content-between align-items-start\">\n              <Link to={`/authors/${kebabCase(author.fieldValue)}/`}>\n                {startCase(author.fieldValue)}\n              </Link>\n              <span className=\"badge bg-dark\">{author.totalCount}</span>\n            </li>\n          ))}\n        </ul>\n      </Row>\n    </Container>\n  </Layout>\n)\n\nAuthorsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default AuthorsPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(limit: 2000) {\n            group(field: {frontmatter: {author: SELECT}}) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`\n\nexport const Head = () => (\n  <Seo title={\"An index of authors on this site\"} description={\"An indexed view of authors who have written on this site, with counts\"}/>\n)","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["data","allMarkdownRemark","group","site","siteMetadata","title","className","map","author","key","fieldValue","Link","to","totalCount","Head","description","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}