{"version":3,"file":"component---src-templates-page-js-fcc25e9554d69cb3f32c.js","mappings":"iQAMe,SAASA,EAAYC,GAA4B,IAA1BC,MAAM,eAACC,IAAgBF,EACzD,MAAM,YAACG,EAAW,KAAEC,GAAQF,EAC5B,OACIG,EAAAA,cAACC,EAAAA,EAAM,KACHD,EAAAA,cAACE,EAAAA,EAAS,KACNF,EAAAA,cAACG,EAAAA,EAAG,CAACC,UAAW,aACZJ,EAAAA,cAAA,OAAKI,UAAU,QACXJ,EAAAA,cAAA,MAAII,UAAU,gCAAgCN,EAAYO,QAG9DL,EAAAA,cAAA,OAAKI,UAAU,oCACVE,wBAAyB,CAACC,OAAQR,OAM3D,CAsBO,SAASS,EAAIC,GAA4B,IAA1Bb,MAAM,eAACC,IAAgBY,EACzC,MAAM,YAACX,GAAeD,EACtB,OACIG,EAAAA,cAACU,EAAAA,EAAG,CAACL,MAAOP,EAAYO,OAEhC,C,+ECAA,MAxCYV,IAA2D,IAA1D,MAAEU,EAAK,YAAEM,EAAW,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,GAAUnB,EAC/D,MAAQU,MAAOU,EAAcJ,YAAaK,EAAkB,MAAEC,EAAK,QAAEC,EAAO,cAAEC,ICR/DC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDLnBC,QAAQC,IAAIV,GACZ,MAAMW,EAVR,SAAwBX,EAAUG,GAChC,OAAIH,EACKA,aAAQ,EAARA,EAAUY,gBAAgBC,gBAAgBC,OAAOC,SAASC,IAE5Db,CACT,CAKwBc,CAAejB,EAAUG,GACzCe,EAAM,CACV3B,MAAOA,GAASU,EAChBJ,YAAaA,GAAeK,EAC5BC,MAAO,GAAGC,IAAUO,IACpBQ,IAAK,GAAGf,IAAUN,GAAY,KAC9BO,iBAIF,OACEnB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQgC,EAAI3B,OACZL,EAAAA,cAAA,QAAMkC,KAAK,cAAcC,QAASH,EAAIrB,cACtCX,EAAAA,cAAA,QAAMkC,KAAK,QAAQC,QAASH,EAAIf,QAChCjB,EAAAA,cAAA,QAAMkC,KAAK,eAAeC,QAAQ,wBAClCnC,EAAAA,cAAA,QAAMkC,KAAK,gBAAgBC,QAASH,EAAI3B,QACxCL,EAAAA,cAAA,QAAMkC,KAAK,cAAcC,QAASH,EAAIC,MACtCjC,EAAAA,cAAA,QAAMkC,KAAK,sBAAsBC,QAASH,EAAIrB,cAC9CX,EAAAA,cAAA,QAAMkC,KAAK,gBAAgBC,QAASH,EAAIf,QACxCjB,EAAAA,cAAA,QAAMkC,KAAK,kBAAkBC,QAASH,EAAIb,gBAC1CnB,EAAAA,cAAA,QAAMoC,SAAS,SAASD,QAASH,EAAIC,IAAII,aACzCrC,EAAAA,cAAA,QAAMoC,SAAS,WAAWD,QAASH,EAAI3B,QACvCL,EAAAA,cAAA,QAAMoC,SAAS,UAAUD,QAAQ,YACjCnC,EAAAA,cAAA,QAAMoC,SAAS,eAAeD,QAAQ,iBACtCnC,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAASH,EAAIrB,cAC7CX,EAAAA,cAAA,QAAMoC,SAAS,YAAYD,QAAQ,UACnCnC,EAAAA,cAAA,QAAMoC,SAAS,WAAWD,QAASH,EAAIf,MAAMoB,aAC7CrC,EAAAA,cAAA,QAAMoC,SAAS,eAAeD,QAAQ,oCACtCnC,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAAQ,QACxCnC,EAAAA,cAAA,QAAMoC,SAAS,iBAAiBD,QAAQ,QACxCnC,EAAAA,cAAA,QAAMoC,SAAS,gBAAgBD,QAAQ,eACtCtB,EACA,C","sources":["webpack://micropasts-blog-gatsby/./src/templates/page.js","webpack://micropasts-blog-gatsby/./src/components/structure/SEO.js","webpack://micropasts-blog-gatsby/./src/hooks/use-site-metadata.js"],"sourcesContent":["import {graphql} from \"gatsby\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Container, Row} from \"react-bootstrap\";\nimport Seo from \"../components/structure/SEO\";\n\nexport default function PageTemplate({data: {markdownRemark}}) {\n    const {frontmatter, html} = markdownRemark;\n    return (\n        <Layout>\n            <Container>\n                <Row className={\"post-body\"}>\n                    <div className=\"px-4\">\n                        <h1 className=\"text-black fw-bold mt-4 mb-2\">{frontmatter.title}</h1>\n\n                    </div>\n                    <div className=\"post-body bg-white text-black p-4\"\n                         dangerouslySetInnerHTML={{__html: html}}/>\n                </Row>\n            </Container>\n\n        </Layout>\n    );\n}\n\n\nexport const pageQuery = graphql`\n    query ($id: String!) {\n        markdownRemark(id: { eq: $id }) {\n            html\n            id\n            timeToRead\n            wordCount {\n              words\n             }\n            frontmatter {\n                permalink\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                author\n            }\n        }\n    }\n`;\n\nexport function Head({data: {markdownRemark}}) {\n    const {frontmatter} = markdownRemark;\n    return (\n        <Seo title={frontmatter.title}  />\n    )\n}\n","import React from \"react\";\nimport { useSiteMetadata } from \"../../hooks/use-site-metadata\";\n\nfunction createSeoImage(featured, image) {\n  if (featured) {\n    return featured?.childImageSharp.gatsbyImageData.images.fallback.src;\n  }\n  return image;\n}\n\nconst Seo = ({ title, description, pathname, children, featured }) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterHandle } = useSiteMetadata();\n  console.log(featured);\n  const featuredImage = createSeoImage(featured, image);\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${featuredImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterHandle\n  };\n\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterHandle} />\n      <meta property=\"og:url\" content={seo.url.toString()} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content=\"Museologi.st\" />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:locale\" content=\"en-gb\" />\n      <meta property=\"og:image\" content={seo.image.toString()} />\n      <meta property=\"og:image:alt\" content=\"An image representing this post\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:width\" content=\"600\" />\n      <meta property=\"og:image:type\" content=\"image/jpeg\" />\n      {children}\n    </>\n  );\n};\n\nexport default Seo;","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterHandle\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n    return data.site.siteMetadata\n}"],"names":["PageTemplate","_ref","data","markdownRemark","frontmatter","html","React","Layout","Container","Row","className","title","dangerouslySetInnerHTML","__html","Head","_ref2","Seo","description","pathname","children","featured","defaultTitle","defaultDescription","image","siteUrl","twitterHandle","useStaticQuery","site","siteMetadata","console","log","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","createSeoImage","seo","url","name","content","property","toString"],"sourceRoot":""}